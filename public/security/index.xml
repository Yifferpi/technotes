<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on </title>
    <link>https://yifferpi.ch/security/</link>
    <description>Recent content in Security on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jan 2022 15:03:55 +0100</lastBuildDate><atom:link href="https://yifferpi.ch/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Firewall</title>
      <link>https://yifferpi.ch/security/firewalls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yifferpi.ch/security/firewalls/</guid>
      <description>iptables  General concepts  nftables a good resource
 nft --handle list ruleset: lists rules including handles nft insert rule inet filter input ip saddr grader.dtf.netsec.inf.ethz.ch accept nft delete rule inet filter input handle 17 nft add rule inet filter input tcp dport 5432 drop  ufw Unix firewall
gufw for graphical version</description>
    </item>
    <item>
      <title>Security Basics</title>
      <link>https://yifferpi.ch/security/attack_types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yifferpi.ch/security/attack_types/</guid>
      <description>In this article, we list common attack paradigms / patterns, try to explain them, and potentially list examples.
  proxy attack
  downgrade attack
  MitM attack
  side channel attack
  roll-back attack
  DoS attack
  relay / replay attack
  supply chain attack
  Slow Loris
  POODLE
  Heartbleed
  Cuckoo attack (TPMs)
  confused deputy attack (TEE: on ARM TrustZone)</description>
    </item>
    <item>
      <title>utility tools</title>
      <link>https://yifferpi.ch/security/utility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yifferpi.ch/security/utility/</guid>
      <description>sha256sum file: compute checksum sha256 -c sha256sumfile: to check  Ghidra reverse engineering tool with great decompiler
  start project, then open file in CodeBrowser
  accept analyzing
  Menu&amp;gt;Window gives a series of views, e.g. Defined Strings, Function Graph, and Function Call Graph
  GDB   br *main+12: setting breakpoint
  s: stepping one instr
  finish: continue to return statement of current function</description>
    </item>
    <item>
      <title>VPN</title>
      <link>https://yifferpi.ch/security/wireguard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yifferpi.ch/security/wireguard/</guid>
      <description>VPN basics Virtual Private Networks (VPN) create secure channels between two endpoints over an untrusted network (e.g. the Internet). There is generally a setup phase, followed by the tunneling phase.
Typical properties are authentication of the other endpoint (e.g. with MACs), confidentiality (usually based on symmetric crypto), and some sort of replay suppresion (i.e. sequence numbers).
Common Setups:
 site-to-site (e.g. regional office) host-to-site (e.g. home office) secure proxy (e.g. to circumvent censorship)  Great variety of implementations:</description>
    </item>
    <item>
      <title>Cryptography</title>
      <link>https://yifferpi.ch/security/cryptography/</link>
      <pubDate>Wed, 12 Jan 2022 15:03:55 +0100</pubDate>
      <guid>https://yifferpi.ch/security/cryptography/</guid>
      <description>Security properties There are different security concepts that are gathered under the umbrella term &amp;ldquo;security&amp;rdquo;. In the following, we introduce some of these concepts and try to outline the difference and clarify for later discussions.
  Confidentiality: keep unauthorized people from reading the data / keep data secret. In some literature, there is further distinction between secrecy (keep own data secret) and confidentiality (keep someone else&amp;rsquo;s data secret).
  Authentication: knowing the source / sender of the data to be legitimate / the person they pretend to be (data (origin) authentication) or verifying the identity and liveness of another protocol participant (entity authentication).</description>
    </item>
  </channel>
</rss>